////  MeuWebViewViewController.m//  GSMD////  Created by Fabio Valencio on 11/03/11.//  Copyright 2011 PontoMobi. All rights reserved.//#import "MeuWebViewViewController.h"#import "global.h"@implementation MeuWebViewViewController@synthesize myUrl;- (void)viewDidLoad {    [super viewDidLoad];	UIImage *image = [UIImage imageNamed:@"btnBack.png"];	UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];	[button setBackgroundImage: [image stretchableImageWithLeftCapWidth:7.0 topCapHeight:0.0] forState:UIControlStateNormal];	button.frame= CGRectMake(0.0, 0.0, image.size.width, image.size.height);	[button addTarget:self action:@selector(backPage)    forControlEvents:UIControlEventTouchUpInside];		UIView *v=[[UIView alloc] initWithFrame:CGRectMake(0.0, 0.0, image.size.width, image.size.height) ];	[v addSubview:button];		UIBarButtonItem *forward = [[UIBarButtonItem alloc] initWithCustomView:v];	self.navigationItem.leftBarButtonItem = forward;		[v release];	[image release];	[oWebView loadRequest:myUrl];}#pragma mark -#pragma mark IBAction- (IBAction) backPage{		NSArray *viewControllerArray = [self.navigationController viewControllers];	int parentViewControllerIndex = [viewControllerArray count] - 2;	[self.navigationController popToViewController: [self.navigationController.viewControllers objectAtIndex:parentViewControllerIndex] animated:YES];	}-(void)abrirUrlComString:(NSString*)urlString {		// Criar a url a partir de um string	NSURL* aUrl = [NSURL URLWithString:urlString];	// Crirar a requisicao web 	NSURLRequest* oRequest = [NSURLRequest requestWithURL:aUrl];	// Falar para o web view abrir a requisicao web	[oWebView loadRequest:oRequest];	}#pragma mark UISearchBarDelegate// Usuario clicou no botao de Search no teclado- (void)searchBarSearchButtonClicked:(UISearchBar *)searchBar {	// Tirar o teclado da frente	[searchBar resignFirstResponder];		// Pegar o range do string	NSRange raange = [searchBar.text rangeOfString:@"http://"];		// Se não existir, colocar o http:// no início do string	if (raange.location  == NSNotFound){		searchBar.text = [NSString stringWithFormat:@"http://%@",searchBar.text];	}		// Abrir a url digitada	[self abrirUrlComString:searchBar.text];}- (void)searchBarCancelButtonClicked:(UISearchBar *)searchBar {	[searchBar resignFirstResponder];}#pragma mark UIWebViewDelegate// Webview comecou a carregar uma pagina- (void)webViewDidStartLoad:(UIWebView *)webView {	[spinner startAnimating]; }// Webview terminou de carregar uma pagina- (void)webViewDidFinishLoad:(UIWebView *)webView {	// Parar o indicador	[spinner stopAnimating];	// Mostrar a URL que foi aberta	oSearchBar.text = [[[webView request] URL] absoluteString];}// Deu erro ao tentar abrir a URL requisitada- (void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error {	// Parar o indicador	[spinner stopAnimating];	// Tirar teclado da frente	[oSearchBar resignFirstResponder];	// Informar no search bar que não conseguiu abrir URL	oSearchBar.text = @"NAO CONSEGUI ABRIR URL";	}-(IBAction)abrirNoSafari {	// Pegar uma aplicação	UIApplication* app = [UIApplication sharedApplication];	// Criar a URL a partir do search bar	NSURL* aUrl = [NSURL URLWithString:oSearchBar.text];	// Mandar o aplicativo abrir URL	[app openURL:aUrl];}-(IBAction)fecharModal{	[self dismissModalViewControllerAnimated:YES];}/* // Override to allow orientations other than the default portrait orientation. - (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation { // Return YES for supported orientations return (interfaceOrientation == UIInterfaceOrientationPortrait); } */- (void)didReceiveMemoryWarning {	// Releases the view if it doesn't have a superview.    [super didReceiveMemoryWarning];		// Release any cached data, images, etc that aren't in use.}- (void)viewDidUnload {	// Release any retained subviews of the main view.	// e.g. self.myOutlet = nil;}- (void)dealloc {    [super dealloc];}@end